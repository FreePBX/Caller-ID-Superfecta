<?php

class Send_to_XBMC extends superfecta_base {

    public $description = "This source will send the number and the Caller ID to XBMC.<br>This datasource should be one of the 'last data sources on your list, as it does not provide any data of its own, and can only send what information has been collected before it is run.";
    public $version_requirement = "3.0";
    public $source_param = array(
        'URL_Address' => array(
            'description' => 'Specify The IP To The XMBC Installation. (Example: 192.168.0.155)',
            'type' => 'text'
        ),
        'URL_Port' => array(
            'description' => 'Specify The PORT Defined On Your XMBC Installation.',
            'type' => 'number',
            'default' => '8080'
        ),
        'URL_UserName' => array(
            'description' => 'Specify The Username Defined In Your XBMC Installation.  Blank For None.',
            'type' => 'text'
        ),
        'URL_PassWord' => array(
            'description' => 'Specify The Password Defined In Your XBMC Installation.  Blank For None.',
            'type' => 'text'
        ),
        'Change_Volume' => array(
            'description' => 'Change Volume When Call Comes In, Range Is 100 to 0.  Blank = No Change',
            'type' => 'text'
        ),
        'Pause_PlayBack' => array(
            'description' => 'Pause Whatever Is Playing When A Call Comes In.',
            'type' => 'checkbox'
        ),
        'Format_Incomming_Number' => array(
            'description' => 'Specify The Way You Want The Number To Be Displayed On Your XMBC',
            'type' => 'select',
            'option' => array(
                1 => '(132) 456-7890',
                2 => '132-456-7890',
                3 => '12 34 56 78 90',
                4 => 'No Formatting',
            ),
            'default' => 4
        )
    );

    function post_processing($cache_found, $winning_source, $first_caller_id, $run_param, $thenumber) {
        if ($run_param['URL_Address'] && $run_param['URL_Port'] != '') {
            $thenumberformated = $thenumber;
            switch ($run_param['Format_Incomming_Number']) {
                case 1:
                case 2:
                case 3:
                    $settings = $this->settings();
                    $thenumberformated = $this->FormatNumber($thenumber, $settings["source_param"]['Format_Incomming_Number']['option'][$run_param['Format_Incomming_Number']]);
                    break;
            }

            $first_caller_id = str_replace(",", "", $first_caller_id);

            $clidxbmc = urlencode($thenumberformated . ',' . $first_caller_id);

            $url = 'http://';

            if ($run_param['URL_UserName'] && $run_param['URL_PassWord'] != '') {
                $url .= $run_param['URL_UserName'] . ':' . $run_param['URL_PassWord'] . '@';
            }

            $url1 = $url . $run_param['URL_Address'] . ':' . $run_param['URL_Port'] . '/xbmcCmds/xbmcHttp?command=SetVolume(' . $run_param['Change_Volume'] . ')';
            $url2 = $url . $run_param['URL_Address'] . ':' . $run_param['URL_Port'] . '/xbmcCmds/xbmcHttp?command=Pause()';
            $url3 = $url . $run_param['URL_Address'] . ':' . $run_param['URL_Port'] . '/xbmcCmds/xbmcHttp?command=ExecBuiltIn&parameter=XBMC.Notification(' . $clidxbmc . ')';

            if ($run_param['Change_Volume'] != '') {
                $this->DebugPrint("Send to XBMC: {$url1}");
            }
            if ($run_param['Pause_PlayBack'] != 'off') {
                $this->DebugPrint("Send to XBMC: {$url2}");
            }
            $this->DebugPrint("Send to XBMC: {$url3}");

            // Send Out The Strings
            if ($run_param['Change_Volume'] != '') {
                $value = $this->get_url_contents($url1);
            }
            if ($run_param['Pause_PlayBack'] != 'off') {
                $value = $this->get_url_contents($url2);
            }
            $value = $this->get_url_contents($url3);

            return($thenumber);
        }
    }

}
